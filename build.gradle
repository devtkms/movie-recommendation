plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.devtkms'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot 関連
	implementation 'org.springframework.boot:spring-boot-starter-security' // セキュリティ
	implementation 'org.springframework.boot:spring-boot-starter-web'      // Web アプリ
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0' // OpenAPI UI

	// バリデーション
	implementation 'jakarta.validation:jakarta.validation-api:3.1.1'

	// HTTP クライアント
	implementation 'org.apache.httpcomponents.client5:httpclient5:5.4.2'  // HTTP クライアント
	implementation 'org.apache.httpcomponents.core5:httpcore5:5.3.3'      // HTTP コア
	implementation 'org.apache.httpcomponents:fluent-hc:4.5.14'           // Fluent API

	// 環境変数管理
	implementation 'io.github.cdimascio:java-dotenv:5.2.2' // `.env` ファイルの管理

	// Lombok（アノテーションでボイラープレート削減）
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// 開発支援
	developmentOnly 'org.springframework.boot:spring-boot-devtools' // 開発用ツール

	// テスト関連
	testImplementation 'org.springframework.boot:spring-boot-starter-test'  // Spring Boot のテストフレームワーク
	testImplementation 'org.springframework.security:spring-security-test'  // Spring Security テスト
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher' // JUnit テスト実行用
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('bootJar') {
	mainClass = 'com.devtkms.movierecommendation.MovieRecommendationApplication'
}